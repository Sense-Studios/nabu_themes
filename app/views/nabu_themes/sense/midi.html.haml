%h1 Helloooo Midi Nurse
%script{:src=>"https://cdn.jsdelivr.net/npm/webmidi"}

:javascript

  var input, output, midi

  /*
  https://d2r1vs3d9006ap.cloudfront.net/s3_images/1143703/apc_mini_midi.jpg?1421447412
  0 off
  1 green
  2 green blink
  3 red
  4 red blink
  5 yellow
  6 yellow blink
  */

  var OFF = 0
  var GREEN = 1
  var GREEN_BLINK = 2
  var RED = 3
  var RED_BLINK = 4
  var YELLOW = 5
  var YELLOW_BLINK = 6

  var midimap = [
    [ 56, 57, 58, 59, 60, 61, 62, 63 ],
    [ 48, 49, 50, 51, 52, 53, 54, 55 ],
    [ 40, 41, 42, 43, 44, 45, 46, 47 ],
    [ 32, 33, 34, 35, 36, 37, 38, 39 ],
    [ 24, 25, 26, 27, 28, 29, 30, 31 ],
    [ 16, 17, 18, 19, 20, 21, 22, 23 ],
    [  8,  9, 10, 11, 12, 13, 14, 15 ],
    [  0,  1,  2,  3,  4,  5,  6,  7 ],
  ]

  var text = [
    [ 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0 ],
    [ 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0 ],
    [ 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0 ],
    [ 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0 ],
    [ 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0 ],
    [ 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0 ],
    [ 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0 ],
    [ 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0 ]
  ]

  var c = 0
  function runText() {
    var message = []
    for ( var y = 0; y < text.length; y++ ) {
      for ( var x = 0; x < text[y].length; x++ ) {
          if ( y < midimap.length ) {
            if (x < midimap[y].length ) {
                if ( text[y][x] == 1 ) {
                  message.push( 0x90, midimap[y][x], RED );
                }else{
                  message.push( 0x90, midimap[y][x], OFF );
                }
            }
          }
      }
    }

    output.send( message);
    // console.log("send:", message)

    for ( var y = 0; y < text.length; y++ ) {
      text[y].push( text[y].shift() )
    }


    c++
    setTimeout( function() { runText() }, 100 )
  }

  var rest = [ 64, 65, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89 ]

  if (navigator.requestMIDIAccess) {
      navigator.requestMIDIAccess({sysex: false})
          .then(success, failure);
  }

  function success (_midi) {
      midi = _midi
      var inputs = midi.inputs.values();
      var outputs = midi.outputs.values();
      // inputs is an Iterator

      for (i = inputs.next(); i && !i.done; i = inputs.next()) {
          // each time there is a midi message call the onMIDIMessage function
          input = i.value
          input.onmidimessage = onMIDIMessage;
          console.log(input)
      }

      for (o = outputs.next(); o && !o.done; o = outputs.next()) {
        // each time there is a midi message call the onMIDIMessage function
        output = o.value
        console.log(output)

        // output.send( [0x90, 0, 4] );
        var message = []
        midimap.forEach( function( row, i ) {
          row.forEach( function( value, j ) {
            message.push( 0x90, value, RED_BLINK )
          })
        })

        rest.forEach( function( r, i ) {
          message.push( 0x90, r, OFF )
        })
        output.send( message );
      }
  }

  function failure () {
      console.error('No access to your midi devices.')
  }

  function onMIDIMessage(e) {
    console.log(e)
    var message = []
    if (e.data[1] == 64) {
      midimap.forEach( function( row, i ) {
        row.forEach( function( value, j ) {
          message.push( 0x90, value, OFF );
        })
      })
      rest.forEach( function( r, i ) {
        message.push( 0x90, r, OFF );
      })
      output.send( message );
    }else if (e.data[1] == 65) {

      midimap.forEach( function( row, i ) {
        row.forEach( function( value, j ) {
          message.push( 0x90, value, YELLOW )
        })
      })
      output.send( message );
    }else{
      output.send( [ 0x90, e.data[1], GREEN ] );
    }
  }

  // This is a helper for sending a command out to the midi board
  // since we always use the same start and end bits
  //function sysex(output, bits) {
  //    let allBits = [240, 0, 32, 41, 2, 16].concat(bits, 247)
  //    output.send(allBits)
  //}

  /*
  function initMidi() {
    console.log(WebMidi.inputs);
    console.log(WebMidi.outputs);

    output = WebMidi.outputs[0];
    input = WebMidi.inputs[0];

    // Listen for a 'note on' message on all channels
    input.addListener('noteon', "all", function (e) {
        console.log("Received 'noteon' message (" + e.note.name + e.note.octave + ").");
    });

    // Listen to control change message on all channels
    input.addListener('controlchange', "all",function (e) {
        console.log("Received 'controlchange' message.", e);
    });


    // output.playNote("C3");
    // output.playNote("D#3", 4, {time: "+2000"});
    // sysex(output, [10, 1, 1])
    // WebMidi.outputs[0].sendSysex(0x42, [1, 2, 3, 4, 5]);
    // WebMidi.outputs[0].sendSysex(0x47, [10, 2, 3]);

  }

  WebMidi.enable(function (err) {

    if (err) {
      console.log("WebMidi could not be enabled.", err);
    } else {
      console.log("WebMidi enabled!");
      initMidi()
    }

  }, true );
  */
